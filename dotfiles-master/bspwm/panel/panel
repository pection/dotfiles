#!/bin/bash

if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

panelBspcReport() {
	bspc subscribe report > "$PANEL_FIFO" &
}

panelXTitle() {
    screen_width=$(bspc query -T -m | jq .rectangle.width)
    if [ "$screen_width" -le 800 ]; then
        length="30"
    elif [ "$screen_width" -le 1024 ]; then
        length="60"
    elif [ "$screen_width" -le 1280 ]; then
        length="90"
    else
        length="120"
    fi
	xtitle -sf 'T%s' -t $length > "$PANEL_FIFO" &
}

panelConky() {
    conky -u 1 -t '
C${time %d/%m %H:%M}
L${loadavg 1}
' > "$PANEL_FIFO" &
}

panelThunderbird() {
    # Require https://github.com/teleshoes/thunderbird-unread-count
    while true; do
        if [ ! -d ~/.thunderbird ]; then
            sleep 60
        fi
        if [ $(find ~/.thunderbird -name unread-counts | wc -l) = "0" ]; then
            sleep 60
        fi

        count="$(cat ~/.thunderbird/*.default/unread-counts | grep -v "Dossiers locaux" | grep -v "Count Reset" | cut -d: -f1)"
        if [ -z $count ]; then
            exit 1
        fi
        echo "E${count}"
        sleep 10
    done > "$PANEL_FIFO" &
}

panelTrayerPlaceHolder() {
    if ! command -v trayer > /dev/null 2>&1 ; then
        exit 1
    fi

    # panel here is for trayer
    while true; do
        size="$(xprop -name panel -f WM_SIZE_HINTS 32i ' $5\n' WM_NORMAL_HINTS | grep -o '[0-9]*')"
        if [ -z "$size" ]; then
            echo "P0"
        else
            echo "P${size}"
        fi
        sleep 2.5
    done > "$PANEL_FIFO" &
}

panelCompile() {
	panelBspcReport
	panelXTitle
	panelConky
    if command -v thunderbird > /dev/null 2>&1 ; then
        panelThunderbird
    fi
    if command -v trayer > /dev/null 2>&1 ; then
        panelTrayerPlaceHolder
    fi
}

############################################################

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT

panelCompile

COLOR_BG=$(xrdb -query | grep background | cut -f2 | head -1)
COLOR_FG=$(xrdb -query | grep foreground | cut -f2 | head -1)
panel_bar < "$PANEL_FIFO" | lemonbar \
	-a 128 \
	-n "$PANEL_WM_NAME" \
	-g x$PANEL_HEIGHT \
	-o 0 -f "$PANEL_FONT_TEXT" \
	-o -1 -f "$PANEL_FONT_SYMBOLS" \
	-u 2 \
	-F "$COLOR_FG" \
	-U "$COLOR_FG" \
	-B "$COLOR_BG" \
	| sh &

wid=$(xdo id -a "$PANEL_WM_NAME")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
	sleep 0.1
	wid=$(xdo id -a "$PANEL_WM_NAME")
	tries_left=$((tries_left - 1))
done

# https://github.com/baskerville/bspwm/issues/484#issuecomment-241258204
# https://github.com/LemonBoy/bar/commit/d680ea4256637bc89d59342cf6ac6c6f5fe62dec
if [ -n "$wid" ]; then
    for id in $(xdo id -N Bspwm -n root); do
        xdo below -t $id $wid
    done
fi

wait
